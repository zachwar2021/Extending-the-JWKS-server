function cov_39trxzbir(){var path="C:\\Users\\ckmok\\Documents\\testing\\project2\\tester.js";var hash="b962eefff605c508dd6dfa1425bfe30273f514b8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\ckmok\\Documents\\testing\\project2\\tester.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:12},end:{line:2,column:35}},"2":{start:{line:3,column:16},end:{line:3,column:36}},"3":{start:{line:4,column:16},end:{line:4,column:34}},"4":{start:{line:5,column:21},end:{line:5,column:43}},"5":{start:{line:7,column:0},end:{line:101,column:3}},"6":{start:{line:9,column:4},end:{line:12,column:9}},"7":{start:{line:11,column:8},end:{line:11,column:64}},"8":{start:{line:11,column:37},end:{line:11,column:62}},"9":{start:{line:15,column:4},end:{line:26,column:9}},"10":{start:{line:16,column:8},end:{line:25,column:13}},"11":{start:{line:21,column:12},end:{line:21,column:38}},"12":{start:{line:21,column:21},end:{line:21,column:38}},"13":{start:{line:23,column:12},end:{line:23,column:89}},"14":{start:{line:24,column:8},end:{line:24,column:15}},"15":{start:{line:29,column:4},end:{line:42,column:7}},"16":{start:{line:30,column:8},end:{line:41,column:11}},"17":{start:{line:34,column:16},end:{line:34,column:42}},"18":{start:{line:34,column:25},end:{line:34,column:42}},"19":{start:{line:35,column:30},end:{line:35,column:38}},"20":{start:{line:36,column:37},end:{line:36,column:54}},"21":{start:{line:37,column:16},end:{line:37,column:62}},"22":{start:{line:38,column:34},end:{line:38,column:91}},"23":{start:{line:39,column:16},end:{line:39,column:84}},"24":{start:{line:40,column:12},end:{line:40,column:19}},"25":{start:{line:45,column:2},end:{line:57,column:5}},"26":{start:{line:46,column:4},end:{line:56,column:9}},"27":{start:{line:50,column:8},end:{line:50,column:34}},"28":{start:{line:50,column:17},end:{line:50,column:34}},"29":{start:{line:51,column:22},end:{line:51,column:30}},"30":{start:{line:52,column:29},end:{line:52,column:46}},"31":{start:{line:53,column:28},end:{line:53,column:57}},"32":{start:{line:54,column:8},end:{line:54,column:65}},"33":{start:{line:55,column:8},end:{line:55,column:15}},"34":{start:{line:60,column:2},end:{line:77,column:5}},"35":{start:{line:61,column:20},end:{line:61,column:61}},"36":{start:{line:62,column:16},end:{line:62,column:17}},"37":{start:{line:64,column:4},end:{line:76,column:5}},"38":{start:{line:65,column:6},end:{line:75,column:11}},"39":{start:{line:69,column:10},end:{line:69,column:36}},"40":{start:{line:69,column:19},end:{line:69,column:36}},"41":{start:{line:70,column:10},end:{line:70,column:18}},"42":{start:{line:72,column:10},end:{line:74,column:11}},"43":{start:{line:73,column:12},end:{line:73,column:19}},"44":{start:{line:81,column:2},end:{line:98,column:5}},"45":{start:{line:82,column:20},end:{line:82,column:62}},"46":{start:{line:83,column:16},end:{line:83,column:17}},"47":{start:{line:85,column:4},end:{line:97,column:5}},"48":{start:{line:86,column:6},end:{line:96,column:11}},"49":{start:{line:90,column:10},end:{line:90,column:36}},"50":{start:{line:90,column:19},end:{line:90,column:36}},"51":{start:{line:91,column:10},end:{line:91,column:18}},"52":{start:{line:93,column:10},end:{line:95,column:11}},"53":{start:{line:94,column:12},end:{line:94,column:19}},"54":{start:{line:103,column:0},end:{line:109,column:3}},"55":{start:{line:105,column:4},end:{line:108,column:7}},"56":{start:{line:106,column:8},end:{line:106,column:38}},"57":{start:{line:107,column:8},end:{line:107,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:31},end:{line:7,column:32}},loc:{start:{line:7,column:37},end:{line:101,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:11},end:{line:9,column:12}},loc:{start:{line:9,column:23},end:{line:12,column:7}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:11,column:26},end:{line:11,column:27}},loc:{start:{line:11,column:37},end:{line:11,column:62}},line:11},"3":{name:"(anonymous_3)",decl:{start:{line:15,column:67},end:{line:15,column:68}},loc:{start:{line:15,column:77},end:{line:26,column:7}},line:15},"4":{name:"(anonymous_4)",decl:{start:{line:20,column:15},end:{line:20,column:16}},loc:{start:{line:20,column:29},end:{line:25,column:11}},line:20},"5":{name:"(anonymous_5)",decl:{start:{line:29,column:42},end:{line:29,column:43}},loc:{start:{line:29,column:52},end:{line:42,column:5}},line:29},"6":{name:"(anonymous_6)",decl:{start:{line:33,column:17},end:{line:33,column:18}},loc:{start:{line:33,column:31},end:{line:41,column:9}},line:33},"7":{name:"(anonymous_7)",decl:{start:{line:45,column:56},end:{line:45,column:57}},loc:{start:{line:45,column:66},end:{line:57,column:3}},line:45},"8":{name:"(anonymous_8)",decl:{start:{line:49,column:11},end:{line:49,column:12}},loc:{start:{line:49,column:25},end:{line:56,column:7}},line:49},"9":{name:"(anonymous_9)",decl:{start:{line:60,column:94},end:{line:60,column:95}},loc:{start:{line:60,column:104},end:{line:77,column:3}},line:60},"10":{name:"(anonymous_10)",decl:{start:{line:68,column:13},end:{line:68,column:14}},loc:{start:{line:68,column:27},end:{line:75,column:9}},line:68},"11":{name:"(anonymous_11)",decl:{start:{line:81,column:94},end:{line:81,column:95}},loc:{start:{line:81,column:104},end:{line:98,column:3}},line:81},"12":{name:"(anonymous_12)",decl:{start:{line:89,column:13},end:{line:89,column:14}},loc:{start:{line:89,column:27},end:{line:96,column:9}},line:89},"13":{name:"(anonymous_13)",decl:{start:{line:103,column:6},end:{line:103,column:7}},loc:{start:{line:103,column:16},end:{line:109,column:1}},line:103},"14":{name:"(anonymous_14)",decl:{start:{line:105,column:17},end:{line:105,column:18}},loc:{start:{line:105,column:23},end:{line:108,column:5}},line:105}},branchMap:{"0":{loc:{start:{line:21,column:12},end:{line:21,column:38}},type:"if",locations:[{start:{line:21,column:12},end:{line:21,column:38}},{start:{line:21,column:12},end:{line:21,column:38}}],line:21},"1":{loc:{start:{line:23,column:19},end:{line:23,column:62}},type:"binary-expr",locations:[{start:{line:23,column:19},end:{line:23,column:32}},{start:{line:23,column:36},end:{line:23,column:62}}],line:23},"2":{loc:{start:{line:34,column:16},end:{line:34,column:42}},type:"if",locations:[{start:{line:34,column:16},end:{line:34,column:42}},{start:{line:34,column:16},end:{line:34,column:42}}],line:34},"3":{loc:{start:{line:50,column:8},end:{line:50,column:34}},type:"if",locations:[{start:{line:50,column:8},end:{line:50,column:34}},{start:{line:50,column:8},end:{line:50,column:34}}],line:50},"4":{loc:{start:{line:69,column:10},end:{line:69,column:36}},type:"if",locations:[{start:{line:69,column:10},end:{line:69,column:36}},{start:{line:69,column:10},end:{line:69,column:36}}],line:69},"5":{loc:{start:{line:72,column:10},end:{line:74,column:11}},type:"if",locations:[{start:{line:72,column:10},end:{line:74,column:11}},{start:{line:72,column:10},end:{line:74,column:11}}],line:72},"6":{loc:{start:{line:90,column:10},end:{line:90,column:36}},type:"if",locations:[{start:{line:90,column:10},end:{line:90,column:36}},{start:{line:90,column:10},end:{line:90,column:36}}],line:90},"7":{loc:{start:{line:93,column:10},end:{line:95,column:11}},type:"if",locations:[{start:{line:93,column:10},end:{line:95,column:11}},{start:{line:93,column:10},end:{line:95,column:11}}],line:93}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b962eefff605c508dd6dfa1425bfe30273f514b8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_39trxzbir=function(){return actualCoverage;};}return actualCoverage;}cov_39trxzbir();const assert=(cov_39trxzbir().s[0]++,require('assert'));const jwt=(cov_39trxzbir().s[1]++,require('jsonwebtoken'));const request=(cov_39trxzbir().s[2]++,require('supertest'));const express=(cov_39trxzbir().s[3]++,require('express'));const{app,server}=(cov_39trxzbir().s[4]++,require('./server.js'));cov_39trxzbir().s[5]++;describe('Test API endpoints',()=>{cov_39trxzbir().f[0]++;cov_39trxzbir().s[6]++;before(async()=>{cov_39trxzbir().f[1]++;cov_39trxzbir().s[7]++;// Wait for the server to start and generate key pairs before running tests
await new Promise(resolve=>{cov_39trxzbir().f[2]++;cov_39trxzbir().s[8]++;return setTimeout(resolve,1000);});});//test if the JWKS has key in it from the /.well-known/jwks.json
cov_39trxzbir().s[9]++;it('should return JWKS when accessing /.well-known/jwks.json',done=>{cov_39trxzbir().f[3]++;cov_39trxzbir().s[10]++;request(app).get('/.well-known/jwks.json').expect('Content-Type',/^application\/json/).expect(200).end((err,res)=>{cov_39trxzbir().f[4]++;cov_39trxzbir().s[11]++;if(err){cov_39trxzbir().b[0][0]++;cov_39trxzbir().s[12]++;return done(err);}else{cov_39trxzbir().b[0][1]++;}// Assert that the response contains keys
cov_39trxzbir().s[13]++;assert((cov_39trxzbir().b[1][0]++,res.body.keys)&&(cov_39trxzbir().b[1][1]++,res.body.keys.length===1),'Invalid JWKS response');cov_39trxzbir().s[14]++;done();});});//test if there is a valid JWT token from the .post('/auth')
cov_39trxzbir().s[15]++;it('should return a valid JWT token',done=>{cov_39trxzbir().f[5]++;cov_39trxzbir().s[16]++;request(app).post('/auth').expect(200).end((err,res)=>{cov_39trxzbir().f[6]++;cov_39trxzbir().s[17]++;if(err){cov_39trxzbir().b[2][0]++;cov_39trxzbir().s[18]++;return done(err);}else{cov_39trxzbir().b[2][1]++;}const token=(cov_39trxzbir().s[19]++,res.text);const decodedToken=(cov_39trxzbir().s[20]++,jwt.decode(token));cov_39trxzbir().s[21]++;assert.ok(decodedToken,'Token should exist');const isExpired=(cov_39trxzbir().s[22]++,decodedToken.payload?.exp<Math.floor(Date.now()/1000));cov_39trxzbir().s[23]++;assert.strictEqual(isExpired,false,'Token should not be expired');cov_39trxzbir().s[24]++;done();});});//test if there is a expired JWT token if requested from the .post('/auth')
cov_39trxzbir().s[25]++;it('should return an expired JWT token if requested',done=>{cov_39trxzbir().f[7]++;cov_39trxzbir().s[26]++;request(app).post('/auth?expired=true').expect(200).end((err,res)=>{cov_39trxzbir().f[8]++;cov_39trxzbir().s[27]++;if(err){cov_39trxzbir().b[3][0]++;cov_39trxzbir().s[28]++;return done(err);}else{cov_39trxzbir().b[3][1]++;}const token=(cov_39trxzbir().s[29]++,res.text);const decodedToken=(cov_39trxzbir().s[30]++,jwt.decode(token));const currentTime=(cov_39trxzbir().s[31]++,Math.floor(Date.now()/1000));cov_39trxzbir().s[32]++;assert.strictEqual(decodedToken.exp<currentTime,true);// Assert that the token is expired
cov_39trxzbir().s[33]++;done();});});// tests for 405 code on unautherized acces to put, delete, pathc, and head of the /auth endpoints
cov_39trxzbir().s[34]++;it('should return "Method Not Allowed" for /auth endpoint (GET, PUT, DELETE, PATCH, HEAD)',done=>{cov_39trxzbir().f[9]++;const methods=(cov_39trxzbir().s[35]++,['get','put','delete','patch','head']);let count=(cov_39trxzbir().s[36]++,0);cov_39trxzbir().s[37]++;for(const method of methods){cov_39trxzbir().s[38]++;request(app)[method]('/auth').expect(405).end((err,res)=>{cov_39trxzbir().f[10]++;cov_39trxzbir().s[39]++;if(err){cov_39trxzbir().b[4][0]++;cov_39trxzbir().s[40]++;return done(err);}else{cov_39trxzbir().b[4][1]++;}cov_39trxzbir().s[41]++;count++;cov_39trxzbir().s[42]++;if(count===methods.length){cov_39trxzbir().b[5][0]++;cov_39trxzbir().s[43]++;done();}else{cov_39trxzbir().b[5][1]++;}});}});// test for 405 code on unautherized acces to put, delete, patach, and post for the JWKS endpoints 
cov_39trxzbir().s[44]++;it('should return "Method Not Allowed" for JWKS endpoint (HEAD, PUT, DELETE, PATCH, POST)',done=>{cov_39trxzbir().f[11]++;const methods=(cov_39trxzbir().s[45]++,['head','put','delete','patch','post']);let count=(cov_39trxzbir().s[46]++,0);cov_39trxzbir().s[47]++;for(const method of methods){cov_39trxzbir().s[48]++;request(app)[method]('/.well-known/jwks.json').expect(405).end((err,res)=>{cov_39trxzbir().f[12]++;cov_39trxzbir().s[49]++;if(err){cov_39trxzbir().b[6][0]++;cov_39trxzbir().s[50]++;return done(err);}else{cov_39trxzbir().b[6][1]++;}cov_39trxzbir().s[51]++;count++;cov_39trxzbir().s[52]++;if(count===methods.length){cov_39trxzbir().b[7][0]++;cov_39trxzbir().s[53]++;done();}else{cov_39trxzbir().b[7][1]++;}});}});});// Add more test cases as needed
cov_39trxzbir().s[54]++;after(done=>{cov_39trxzbir().f[13]++;cov_39trxzbir().s[55]++;// Close the server after all tests
server.close(()=>{cov_39trxzbir().f[14]++;cov_39trxzbir().s[56]++;console.log('Server closed.');cov_39trxzbir().s[57]++;done();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,